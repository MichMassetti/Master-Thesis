@book{KeYBook2016,
  editor       = {Wolfgang Ahrendt and Bernhard Beckert and Richard Bubel and
                  Reiner H{\"a}hnle and Peter H. Schmitt and Mattias Ulbrich},
  title        = {Deductive Software Verification - The {Ke\kern-.1em Y} Book: From Theory
                  to Practice},
  series       = {Lecture Notes in Computer Science},
  volume       = {10001},
  publisher    = {Springer},
  doi          = {10.1007/978-3-319-49812-6},
  year         = {2016}
}

@article{mittelbach2014,
  author = {Frank Mittelbach},
  title = {How to influence the position of float environments like figure and table in \LaTeX?},
  journal = {TUGboat},
  year = {2014},
  volume = {35},
  pages = {248--254},
  url = {https://www.latex-project.org/publications/tb111mitt-float.pdf},
}

@incollection{SolcVerify,
	doi = {10.1007/978-3-030-41600-3_11},
  
	url = {https://doi.org/10.1007%2F978-3-030-41600-3_11},
  
	year = 2020,
	publisher = {Springer International Publishing},
  
	pages = {161--179},
  
	author = {{\'{A}
}kos Hajdu and Dejan Jovanovi{\'{c}}},
  
	title = {solc-verify: A Modular Verifier for Solidity Smart Contracts},
  
	booktitle = {Lecture Notes in Computer Science}
}
@unknown{SolcVerify_2,
author = {Hajdu, Ákos and Jovanović, Dejan and Ciocarlie, Gabriela},
year = {2020},
month = {05},
pages = {},
title = {Formal Specification and Verification of Solidity Contracts with Events}
}
@misc {SolcVerify_3, author = {{\'{A}
}kos Hajdu and Dejan Jovanovi{\'{c}}}, 
title = {SolcVerify}, 
year = {2021}, 
publisher = {GitHub}, 
journal = {GitHub repository}, 
howpublished = {\ url {https://github.com/SRI-CSL/solidity/blob/0.7/SOLC-VERIFY-README.md}}, 
commit = {0106cfb19b1c30f394ae0e3ed27ac36727502475 }}  

@inproceedings{Echidna,
author = {Grieco, Gustavo and Song, Will and Cygan, Artur and Feist, Josselin and Groce, Alex},
title = {Echidna: Effective, Usable, and Fast Fuzzing for Smart Contracts},
year = {2020},
isbn = {9781450380089},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3395363.3404366},
doi = {10.1145/3395363.3404366},
abstract = {Ethereum smart contracts---autonomous programs that run on a blockchain---often control transactions of financial and intellectual property. Because of the critical role they play, smart contracts need complete, comprehensive, and effective test generation. This paper introduces an open-source smart contract fuzzer called Echidna that makes it easy to automatically generate tests to detect violations in assertions and custom properties. Echidna is easy to install and does not require a complex configuration or deployment of contracts to a local blockchain. It offers responsive feedback, captures many property violations, and its default settings are calibrated based on experimental data. To date, Echidna has been used in more than 10 large paid security audits, and feedback from those audits has driven the features and user experience of Echidna, both in terms of practical usability (e.g., smart contract frameworks like Truffle and Embark) and test generation strategies. Echidna aims to be good at finding real bugs in smart contracts, with minimal user effort and maximal speed.},
booktitle = {Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis},
pages = {557–560},
numpages = {4},
keywords = {fuzzing, smart contracts, test generation},
location = {Virtual Event, USA},
series = {ISSTA 2020}
}
@inproceedings{Slither,
	doi = {10.1109/wetseb.2019.00008},
  
	url = {https://doi.org/10.1109%2Fwetseb.2019.00008},
  
	year = 2019,
	month = {may},
  
	publisher = {{IEEE}
},
  
	author = {Josselin Feist and Gustavo Grieco and Alex Groce},
  
	title = {Slither: A Static Analysis Framework for Smart Contracts},
  
	booktitle = {2019 {IEEE}/{ACM} 2nd International Workshop on Emerging Trends in Software Engineering for Blockchain ({WETSEB})}
}
@misc{SlitherGitHub,
  title = {Slither},
  year = {2019},
  publisher = {GitHub},
  journal = {GitHub repository},
  howpublished = {\url{https://github.com/crytic/slither}},
  commit = {4f57d6a0e4c030202a07a60bc1bb1ed1544bf679}
}  
@inproceedings{Mythril,
author = {Bernhard Mueller},
title = {Smashing ethereum smart contracts for fun and real
profit},
year = {2018},
publisher = {In 9th Annual HITB Security Conference (HITBSecConf)},
address = {Amsterdam, Netherlands},
url = {https://github.com/muellerberndt/smashing-smart-contracts/blob/master/smashing-smart-contracts-1of1.pdf},
}
@misc{SWCRegistry,
  title = {SmartContractSecurity. SWC Registry},
  year= {2020},
  howpublished = {\url{ https://swcregistry.io/}},
  note = {Accessed: 2022-04-15}
}

@misc{XSurgeBNB,
  title = {XSURGE on the BSC Chain was Attacked by Lightning Loans — A Full Analysis},
  year= {2021},
  howpublished = {\url{ https://beosin.medium.com/a-sweet-blow-fb0a5e08657d}},
  note = {Accessed: 2022-04-15}
}
@misc{XSurgeWeb,
  title = {xSurge Assets},
  year= {2021},
  howpublished = {\url{ https://xsurge.net/surge-assets}},
  note = {Accessed: 2022-04-15}
}
@misc{CloudFareDos,
  title = {What is a denial-of-service attack},
  year= {2022},
  howpublished = {\url{ https://www.cloudflare.com/it-it/learning/ddos/glossary/denial-of-service/}},
  note = {Accessed: 2022-04-15}
}
@misc{Dos1,
  title = {Solidity Vulnerability: Denial of Service (DoS)},
  year= {2022},
  author={Derek Arends},
  howpublished = {\url{ https://www.derekarends.com/solidity-vulnerability-denial-of-service-dos/}},
  note = {Accessed: 2022-04-16}
}
@inproceedings {SmartTest,
author = {Sunbeom So and Seongjoon Hong and Hakjoo Oh},
title = {{SmarTest}: Effectively Hunting Vulnerable Transaction Sequences in Smart Contracts through Language {Model-Guided} Symbolic Execution},
booktitle = {30th USENIX Security Symposium (USENIX Security 21)},
year = {2021},
isbn = {978-1-939133-24-3},
pages = {1361--1378},
url = {https://www.usenix.org/conference/usenixsecurity21/presentation/so},
publisher = {USENIX Association},
month = aug,
}


